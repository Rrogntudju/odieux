<html>
    <head>
        <meta charset="utf-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <script src="dist/knockout-3.5.1.js"></script>
        <link rel="stylesheet" href="dist/w3.css">
        <link rel="icon" type="image/x-icon" href="dist/favicon.ico"/>
        <style>
          header {
            position: sticky; top: 0; left: 0; width: 100%;
          }
          footer {
            position: sticky; bottom: 0; left: 0; width: 100%;
          }
        </style>
    </head>

    <body>
      <header>
        <div class="w3-container w3-round w3-teal header">
          <div class="w3-container w3-cell">
            <p>C'est si bon</p>
          </div>
          <div class="w3-container w3-cell w3-border-left">
            <p>Les joies du CSS</p>
          </div>
        </div>
      </header>
      <div class="w3-container" data-bind="foreach: épisodes">
        <div class="w3-container w3-cell w3-round w3-text-teal w3-btn" data-bind="text: titre">
        </div>
      </div>
      <footer>
        <div class="w3-container w3-round w3-teal footer">
          <div class="w3-container w3-cell">
            <span data-bind="text: message"></span>
          </div>
        </div>
      </footer>
      
      <script>
        document.onreadystatechange = function () {
          csbViewModel.command("State", "");
          if (csbViewModel.épisodes().length == 0) {
            csbViewModel.command("Page", "1");
          }
        }

        const csbViewModel = {
          /*
          player: ko.observable(""),
          volume: ko.observable(""),
          page: ko.observable(""),
          épisodes: ko.observableArray([]),
          message: ko.observable(""),
          */
          player: ko.observable("Stopped"),
          volume: ko.observable("10"),
          page: ko.observable("1"),
          épisodes: ko.observableArray([
            { titre: 'Toune 1', media_id: '00000000'  },
            { titre: 'Toune 2', media_id: '00000000'  },
            { titre: 'Toune 2', media_id: '00000000'  },
            { titre: 'Toune 4', media_id: '00000000'  },
            { titre: 'Toune 5', media_id: '00000000'  },
          ]),
          message: ko.observable("BEUH!"),

          enableCommand: ko.observable(false),

          command: function(verb, param) {
            this.message("");

            const headers = new Headers({
                'Content-Type': 'application/json',
            });

            switch (verb) {
              case "Start":
                body = '{ "Start": "' + param + '" }'
                break;
              case "Page":
                body = '{ "Page": ' + param + ' }'
                break;
              default:
                body = '{ "' + verb + '": null }'
            }
            const request = new Request('/command', {
              method: 'POST',
              headers: headers,
              cache: 'no-cache',
              redirect: 'error',
              body: body
            });

            fetch(request)
            .then(response => response.json())
            .then(data => {
              this.player(data.player);
              this.volume(data.volume.toString());
              this.page(data.page.toString());
              this.épisodes.removeAll();
              for (const épisode of data.episodes) {
                  this.épisodes.push(épisode)
              }
              this.message(data.nessage);
            })
            .catch((error) => {
              message = "Échec de fetch: " + error;
              console.log(message);
              this.message(message);
            });
          }
        }
        
        ko.applyBindings(csbViewModel);
      </script>
    </body>
</html>